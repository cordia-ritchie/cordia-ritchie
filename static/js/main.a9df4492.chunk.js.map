{"version":3,"sources":["logo.svg","Node.js","Heroku.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","state","isOk","isLoading","a","this","setState","fetch","url","mode","resRaw","console","log","json","res","status","oms","message","error","nodeNum","className","classNames","React","Component","Heroku","Array","apply","map","e","i","String","toString","padStart","TabPane","Tabs","callback","key","App","localStorage","getItem","defaultActiveKey","onChange","tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,+GCoEAA,E,kDA/DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,MAAM,EACNC,WAAW,GALA,E,4FASnB,8BAAAC,EAAA,sEAEQC,KAAKC,SAAS,CACVH,WAAW,IAHvB,SAK6BI,MAAMF,KAAKL,MAAMQ,IAAK,CAAEC,KAAM,SAL3D,cAKcC,EALd,OAMQC,QAAQC,IAAIF,GANpB,SAO0BA,EAAOG,OAPjC,OAOcC,EAPd,OAQQT,KAAKC,SAAS,CACVJ,KAAwB,MAAlBQ,EAAOK,OACbC,IAAKF,EAAIE,MAVrB,kDAaQC,IAAQC,MAAR,UAAiBb,KAAKL,MAAMmB,QAA5B,0BAbR,yBAeQd,KAAKC,SAAS,CACVH,WAAW,IAhBvB,6E,0EAqBA,WAAU,IAAD,EAC2BE,KAAKJ,MAA7BE,EADH,EACGA,UAAWD,EADd,EACcA,KAAKc,EADnB,EACmBA,IADnB,EAEoBX,KAAKL,MAAtBQ,EAFH,EAEGA,IAAKW,EAFR,EAEQA,QACb,OAAIhB,EAEI,sBAAKiB,UAAU,qBAAf,UACI,qBAAKA,UAAU,WAAf,SACKD,IAEL,qBAAKC,UAAU,WAAf,SACKZ,OAMb,sBAAKY,UAAWC,IAAW,OACvBnB,EAAK,WAAW,gBADpB,UAGI,qBAAKkB,UAAU,WAAf,SACMD,IAEN,qBAAKC,UAAU,WAAf,SACMZ,IAEN,qBAAKY,UAAU,WAAf,SACMJ,W,GAzDHM,IAAMC,WCYVC,MAZf,WAII,OACI,+BAAOC,MAAMC,MAAM,KAAMD,MAAM,IAAIE,KAAI,SAACC,EAAGC,GACvC,OAAO,cAAC,EAAD,CAAMrB,KALHW,EAKiBU,EAJzB,+BAAN,OAAsCC,OAAOX,EAAQY,SAAS,KAAKC,SAAS,EAAG,KAA/E,wBAImCb,QAASU,IAL/B,IAACV,QCAdc,EAAYC,IAAZD,QAER,SAASE,EAASC,GAChBzB,QAAQC,IAAIwB,GAwBCC,MArBf,WAGE,OAFeC,aAAaC,QAAQ,UAIhC,qBAAKnB,UAAU,MAAf,SACE,eAAC,IAAD,CAAMoB,iBAAiB,IAAIC,SAAUN,EAArC,UACE,cAACF,EAAD,CAASS,IAAI,SAAb,SACE,cAAC,EAAD,KADwB,KAG1B,cAACT,EAAD,CAASS,IAAI,QAAb,gCAAyB,UAQzB,qBCjBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a9df4492.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { message, Button, Alert } from \"antd\";\nimport classNames from 'classnames'\n\nclass Node extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOk: false,\n            isLoading: false,\n        };\n    }\n\n    async componentDidMount() {\n        try {\n            this.setState({\n                isLoading: true,\n            });\n            const resRaw = await fetch(this.props.url, { mode: \"cors\" });\n            console.log(resRaw)\n            const res = await resRaw.json()\n            this.setState({\n                isOk: resRaw.status === 200,\n                oms: res.oms,\n            });\n        } catch (e) {\n            message.error(`${this.props.nodeNum} failed ${e}`);\n        } finally {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    }\n\n    render() {\n        const { isLoading, isOk,oms } = this.state;\n        const { url, nodeNum } = this.props\n        if (isLoading) {\n            return (\n                <div className=\"node node__loading\">\n                    <div className=\"node-num\">\n                        {nodeNum}\n                    </div>\n                    <div className=\"node-url\">\n                        {url }\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className={classNames('node',\n                isOk?'node__ok':'node__failed',\n            )}>\n                <div className=\"node-num\">\n                    { nodeNum }\n                </div>\n                <div className=\"node-url\">\n                    { url }\n                </div>\n                <div className=\"node-oms\">\n                    { oms }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Node","import Node from './Node'\n\n\n\nfunction Heroku() {\n    const makeName = (nodeNum) => {\n        return `https://kenwe-wff-app-ae8d5-${String(nodeNum.toString(16)).padStart(2, \"0\")}.herokuapp.com/woof`\n    }\n    return (\n        <span>{Array.apply(null, Array(5)).map((e, i) => {\n            return <Node url={makeName(i)} nodeNum={i} />\n        })}\n        </span>\n    )\n}\n\nexport default Heroku","import logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { Tabs } from 'antd';\nimport Heroku from './Heroku'\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nfunction App() {\n  const access = localStorage.getItem('access')\n\n  if (access) {\n    return (\n      <div className=\"App\">\n        <Tabs defaultActiveKey=\"1\" onChange={callback}>\n          <TabPane tab=\"Heroku\" key=\"1\">\n            <Heroku />\n          </TabPane>\n          <TabPane tab=\"Other\" key=\"2\">\n            Nothing here yet...\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n\n  return (\"404 no page found\")\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}